#!/usr/bin/python3
import sys


def print_help():
    print("USAGE")
    print("\t./202unsold a b")
    print("DESCRIPTION")
    print("\ta \tconstant computed from the past results")
    print("\tb \tconstant computed from the past results")


all_z_probability = []
all_x_probability = []
all_y_probability = []


def my_calculus(a, b, x, y):
    return ((a - x) * (b - y)) / ((5 * a - 150) * (5 * b - 150))


def print_tab():
    a = array_of_value[0]
    b = array_of_value[1]
    test = 0
    mag = 0.0
    for value in range(1, 7):
        y = value * 10
        x = 10
        if y == 60:
            print("X law", end="")
        else:
            print("Y={:d}".format(y), end="")
        while x is not 60:
            val = my_calculus(a, b, x, y)
            mag += val
            if y == 60:
                var_y = 0
                total = 0.0
                i = test
                while var_y < 5:
                    total += all_z_probability[i]
                    var_y += 1
                    i += 5
                print("\t{:0.3f}".format(total), end='')
                test += 1
                all_x_probability.append(total)
            else:
                all_z_probability.append(val)
                print("\t{:0.3f}".format(val), end='')
            x += 10
        if y == 60:
            print("\t1")
        else:
            print("\t{:0.3f}".format(mag))
            all_y_probability.append(mag)
        mag = 0.0
        y += 10


def print_z():
    a = array_of_value[0]
    b = array_of_value[1]
    total = 0.0
    for i in range(2, 11):
        z = i * 10
        y = 10
        summ_of = 0.0
        while y <= 60:
            x = 10
            while x <= 50:
                val = my_calculus(a, b, x, y)
                if (x + y) == z and y < 60:
                    summ_of += val
                x += 10
            y += 10
        print("\t{:0.3f}".format(summ_of), end='')
        total += summ_of
        z += 10
    print("\t1")


def calc_xyz():
    x = 10
    total_jacket = 0.0
    total_pants = 0.0
    i = 0
    for value in range(1, 6):
        total_jacket += all_x_probability[i] * x
        total_pants += all_y_probability[i] * x
        i += 1
        x += 10
    var_x = 0.0
    var_y = 0.0
    for i in range(0, 5):
        var_x += pow(((i + 1) * 10 - total_jacket), 2) * all_x_probability[i]
        var_y += pow(((i + 1) * 10 - total_pants), 2) * all_y_probability[i]
    return [total_jacket, total_pants, var_x, var_y]


def print_x_y_value():
    print("------------------------------------------------------")
    print("\tX=10\tX=20\tX=30\tX=40\tX=50\tY law")
    print_tab()
    print("------------------------------------------------------")
    print("z\t20\t30\t40\t50\t60\t70\t80\t90\t100\ttotal\np(Z=z)", end="")
    print_z()
    print("------------------------------------------------------")
    tab = calc_xyz()
    print("expected value of X:\t %0.1f" % tab[0])
    print("variance of X:\t\t %0.1f" % tab[2])
    print("expected value of Y:\t %0.1f" % tab[1])
    print("variance of Y:\t\t %0.1f" % tab[3])
    print("expected value of Z:\t %0.1f" % (tab[0] + tab[1]))
    print("variance of Z:\t\t %0.1f" % (tab[2] + tab[3]))
    print("------------------------------------------------------")


array_of_value = []


def argument_parsing():
    if len(sys.argv) <= 2 or len(sys.argv) >= 4 or sys.argv[1] == "-h":
        print_help()
        exit(84)
    for val in sys.argv[1:]:
        try:
            array_of_value.append(int(val))
            if int(val) <= 50:
                print("Value must be greater that 50")
                exit(84)
        except ValueError:
            print("Expected an integer, got", val, "instead")
            exit(84)


def main():
    argument_parsing()
    print_x_y_value()


if __name__ == "__main__":
    main()
